FROM python:3.12-slim AS python-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=2.0.0 \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

ENV PATH="$VENV_PATH/bin:$PATH"

FROM python-base AS builder-base
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq-dev \
    gcc \
    python3-dev && \
    rm -rf /var/lib/apt/lists/*

RUN pip install "poetry==$POETRY_VERSION"

WORKDIR $PYSETUP_PATH
COPY poetry.lock pyproject.toml ./

# Create dummy README.md to satisfy Poetry's requirement
RUN touch README.md

RUN python -m venv $VENV_PATH \
    && . $VENV_PATH/bin/activate \
    && pip install --upgrade pip \
    && poetry install --only main --no-root  # Skip project installation in builder

FROM python-base AS development
ENV FASTAPI_ENV=development

WORKDIR /app

COPY --from=builder-base $VENV_PATH $VENV_PATH
COPY . .

CMD ["/opt/pysetup/.venv/bin/python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]